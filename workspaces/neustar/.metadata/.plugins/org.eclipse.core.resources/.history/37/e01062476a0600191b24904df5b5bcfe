package cr.dnc.ns.broom.controller;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import com.google.gson.Gson;

import cr.dnc.ns.broom.domain.CategoryCatalog;

/**
 * This is the only controller that will behave as a servlet. The reason
 * behind this decision is that we need to load the initial categories in
 * memory and we can do that by taking advantage of the HttpServlet.init method.
 */
@Path("/")
public class CategoryController extends HttpServlet {
	/**
	 * Current version: 1
	 */
	private static final long serialVersionUID = 1L;
	private CategoryCatalog categoryRepo;
	
	public void init() throws ServletException {
		categoryRepo = new CategoryCatalog();
		categoryRepo.init();
	}
	
	@GET
	@Path("/category")
	@Produces(MediaType.APPLICATION_JSON)
	public String listValidCategories() {
		Gson gson = new Gson();
		String json = gson.toJson(CategoryCatalog.getValidCategories());
		return json;
	}
	
	@PUT
	@Path("/category")
	@Produces(MediaType.TEXT_PLAIN)
	public boolean addCategory(@QueryParam("name") final String name) {
		return categoryRepo.add(name);
	}
	
	@DELETE
	@Path("/category")
	@Produces(MediaType.TEXT_PLAIN)
	public boolean deleteCategory(@QueryParam("name") final String name) {
		return categoryRepo.delete(name);
	}
}
